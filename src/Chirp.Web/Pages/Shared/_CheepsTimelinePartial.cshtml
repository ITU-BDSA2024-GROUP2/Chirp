@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<Chirp.Core.CheepDTO>

@{
    var followerMap = ViewData["FollowerMap"] as Dictionary<string, bool> ?? new Dictionary<string, bool>();
    var likeMap = ViewData["LikeMap"] as Dictionary<string, bool> ?? new Dictionary<string, bool>();
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
}

<ul id="messagelist" class="cheeps">
    @foreach (var cheep in Model)
    {
        <div class="cheep">
            <li>
                <div class="authorContainer">
                    <strong>
                        <a href="/@cheep.Author">@cheep.Author</a>
                    </strong>
                    <small>&mdash; @cheep.TimeStamp</small>
                    @if (User.Identity!.IsAuthenticated)
                    {
                        @if (User.Identity?.Name != cheep.Author)
                        {
                            @if (followerMap.ContainsKey(cheep.Author) && followerMap[cheep.Author] == false)
                            {
                                <form method="post" asp-page-handler="Follow">
                                    <input type="hidden" name="authorName" value="@cheep.Author"/>
                                    <input type="hidden" name="page" value="@currentPage"/>
                                    <button class="followBtn" id="follow" type="submit">Follow</button>
                                </form>
                            }
                            else
                            {
                                <form method="post" asp-page-handler="Unfollow">
                                    <input type="hidden" name="authorName" value="@cheep.Author"/>
                                    <input type="hidden" name="page" value="@currentPage"/>
                                    <button class="followBtn" id="unfollow" type="submit">Unfollow</button>
                                </form>
                            }
                        }
                    }
                </div>
                @cheep.Text

                <div class="cheepOptionsContainer">
                    @if (User.Identity!.IsAuthenticated && cheep.Author != User.Identity.Name)
                    {
                        <form method="post" asp-page-handler="ToggleLike">
                            <input type="hidden" name="cheepId" value="@cheep.Id"/>
                            <input type="hidden" name="page" value="@currentPage"/>
                            <button class="heartBtn" type="submit">
                                @if (likeMap.ContainsKey(cheep.Id) && likeMap[cheep.Id])
                                {
                                    <i class="fa fa-heart filled-heart" aria-hidden="true"></i>
                                }
                                else
                                {
                                    <i class="fa fa-heart-o outlined-heart" aria-hidden="true"></i>
                                }
                            </button>
                        </form>
                        <p class="heartBtn">@cheep.LikeCount</p>
                    }
                    else
                    {
                        <i class="fa fa-heart-o outlined-heart" aria-hidden="true"></i>
                        <p>@cheep.LikeCount</p>
                    }
                    <div class="deleteBox">
                        @if (User.Identity!.IsAuthenticated && User.Identity.Name == cheep.Author)
                        {
                        <form method="post" asp-page-handler="Delete">
                            <input type="hidden" name="cheepId" value="@cheep.Id"/>
                            <button class="deleteBtn" type="submit">DELETE</button>
                        </form>
                        }
                    </div>
                </div>
            </li>
        </div>
    }
</ul>

<!--
The script maintains scroll position on redirect
Co-authored by https://stackoverflow.com/a/62881829
-->
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const scrollData = JSON.parse(sessionStorage.getItem("scrollData"));
        if (scrollData && scrollData.url === window.location.href) { // If changing page it should scroll to the top
            window.scrollTo(0, parseInt(scrollData.scrollPosition));
        }
    });
    
    window.addEventListener("beforeunload", () => {
        const scrollData = {
            url: window.location.href,
            scrollPosition: window.scrollY
        };
        sessionStorage.setItem("scrollData", JSON.stringify(scrollData));
    });
</script>